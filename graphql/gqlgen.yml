schema: schema.graphql
exec:
  filename: resolvers/gen_graph.go
model:
  filename: models/gen_models.go

models:
  # Hack: here, we define the Repository model as a struct we control to trick gqlgen into
  # generating an empty resolver instead of a struct with data
  # Hopefully in the future, gqlgen support this case and we can clean that, as well as
  # moving gen_graph.go into it's own package
  Repository:
    model: github.com/MichaelMure/git-bug/graphql/resolvers.repoResolver
  Bug:
    model: github.com/MichaelMure/git-bug/bug.Snapshot
  Comment:
    model: github.com/MichaelMure/git-bug/bug.Comment
  Person:
    model: github.com/MichaelMure/git-bug/bug.Person
  Label:
    model: github.com/MichaelMure/git-bug/bug.Label
  CreateOperation:
    model: github.com/MichaelMure/git-bug/bug/operations.CreateOperation
  SetTitleOperation:
    model: github.com/MichaelMure/git-bug/bug/operations.SetTitleOperation
  AddCommentOperation:
    model: github.com/MichaelMure/git-bug/bug/operations.AddCommentOperation
  SetStatusOperation:
    model: github.com/MichaelMure/git-bug/bug/operations.SetStatusOperation
  LabelChangeOperation:
    model: github.com/MichaelMure/git-bug/bug/operations.LabelChangeOperation
